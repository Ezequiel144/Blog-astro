---
import CardFilter from "../../components/CardFilter.astro";
import LayouteFilter from "../../layouts/LayouteFilter.astro";
import { tagCard } from "../../utils";

export const prerender = true;

export async function getStaticPaths(): Promise<any> {
  const allPosts = await Astro.glob("/src/pages/post/*.md");

  let allUnicTags: string[] = [];
  allPosts.forEach((item) =>
    item.frontmatter.tags.map((subItem: string) => {
      if (allUnicTags.includes(subItem)) {
      } else {
        /* listTagDesign.push(subItem); */
        allUnicTags = [...allUnicTags, subItem /* .replace(/ /g, "-") */];
      }
    })
  );

  return allUnicTags.map((item) => {
    const filterPosts: any = allPosts
      .filter((subItem) => subItem.frontmatter.tags.includes(item))
      .flat();
    return {
      params: { design: item },
      props: { posts: filterPosts },
    };
  });
}

const { design } = Astro.params;
const { posts }: any = Astro.props;

---

<LayouteFilter title={design}>
  <ul class="max-w-[1440px] mx-auto grid grid-cols-gridPosts gap-y-8 gap-8">
    {
      posts?.map((post: { frontmatter: any }) => {
        const { frontmatter } = post;
        let valueTag = tagCard.filter((item: { name: string }) =>
          frontmatter.tags.includes(item.name)
        );
        return (
          <CardFilter
            image={frontmatter.image.url}
            title={frontmatter.title}
            description={frontmatter.description}
            tag={valueTag}
            slug={post.frontmatter.slug}
          />
        );
      })
    }
  </ul>
</LayouteFilter>
