---
import CardFilter from "../../components/CardFilter.astro";
import LayouteFilterCode from "../../layouts/LayouteFilterCode.astro";
import { tagCard } from "../../utils";
export async function getStaticPaths() {
  const allPosts = await Astro.glob("/src/pages/post/*.md");

  let allUnicTags: string[] = [];
  allPosts.forEach((item) =>
    item.frontmatter.tags.map((subItem: string) => {
      if (!allUnicTags.includes(subItem)) {
        allUnicTags = [...allUnicTags, subItem];
      }
    })
  );

  return allUnicTags.map((item) => {
    const filterPosts: any = allPosts
      .filter((subItem) => subItem.frontmatter.tags.includes(item))
      .flat();
    return {
      params: { code: item },
      props: { posts: filterPosts },
    };
  });

  /* return [
    {
      params: { tagDesign: "design" },
      props: { name: "design" },
    },
    {
      params: { tagDesign: "visual-design" },
      props: { name: "visual design" },
    },
    {
      params: { tagDesign: "colour" },
      props: { name: "colour" },
    },
    {
      params: { tagDesign: "typography" },
      props: { name: "typography" },
    },
  ]; */
}

const { code } = Astro.params;
const { posts } = Astro.props;
---

<LayouteFilterCode title={code}>
  <main class="max-w-[1440px] mx-auto">
    <ul class="max-w-[1440px] mx-auto flex flex-wrap justify-between gap-y-8">
      {
        posts.map((post: any) => {
          const { frontmatter } = post;
          let valueTag = tagCard.filter(
            (item: { name: string }) => item.name === frontmatter.tags[0]
          );
          return (
            <CardFilter
              image={frontmatter.image.url}
              title={frontmatter.title}
              description={frontmatter.description}
              tag={valueTag[0]}
            />
          );
        })
      }
    </ul>
  </main>
</LayouteFilterCode>
